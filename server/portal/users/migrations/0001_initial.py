# Generated by Django 4.1.3 on 2022-12-10 10:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('type', models.CharField(blank=True, choices=[('STUDENT', 'Student'), ('PROFESSOR', 'Professor'), ('STAFF', 'Staff'), ('ADMIN', 'Admin')], max_length=10, null=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_valid_till', models.DateTimeField(blank=True, null=True)),
                ('otp_attempts_remaining', models.IntegerField(default=3)),
                ('otp_cooldown', models.DateTimeField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('university', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('is_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('entry_number', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator('^20\\d{2}[A-Z]{2}[0-9A-Z]\\d{4}$')])),
                ('entry_year', models.CharField(blank=True, max_length=4)),
                ('department', models.CharField(blank=True, max_length=2)),
                ('program', models.CharField(choices=[('BTECH', 'Bachelor of Technology'), ('DUAL', 'Dual Degree - B.Tech + M.Tech'), ('MTECH', 'Master of Technology'), ('MSC', 'Master of Science'), ('MSR', 'Master of Science - Research'), ('MDES', 'Master of Design'), ('MBA', 'Master of Business Administration'), ('MPP', 'Master of Public Policy'), ('PGD', 'Post Graduate Diploma'), ('PHD', 'Doctor of Philosophy')], max_length=100)),
                ('cgpa', models.DecimalField(decimal_places=3, max_digits=5)),
                ('resume', models.FileField(upload_to='resumes/')),
                ('academic_transcript', models.FileField(upload_to='acad_transcripts/')),
                ('sop', models.FileField(upload_to='sops/')),
                ('is_verified', models.BooleanField(default=False)),
            ],
        ),
    ]
